{"version":3,"sources":["Components/Statistics/Statistics.jsx","Components/Section/Section.jsx","Components/FeedbackOptions/FeedbackOptions.jsx","Components/Notification/Notification.jsx","App.js","index.js"],"names":["Statistics","good","neutral","bad","total","positivePercentage","Section","title","children","className","FeedbackOptions","options","onLeaveFeedback","map","option","type","name","onClick","shortid","generate","Notification","massage","App","state","countTotalFeedback","countPositiveFeedbackPercentage","result","percentage","Math","round","event","target","setState","prevState","this","objectKey","Object","keys","message","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kSAsBeA,EAnBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,gCACE,sCAASJ,KACT,yCAAYC,KACZ,qCAAQC,KACR,uCAAUC,KACV,kDAAqBC,EAArB,WCOSC,G,MAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,gCACE,oBAAIC,UAAU,gBAAd,SAA+BF,IAC9BC,O,gBCmBQE,G,MAtBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,8BACGD,EAAQE,KAAI,SAAAC,GAAM,OACjB,wBACEL,UAAU,gBAEVM,KAAK,SACLC,KAAMF,EACNG,QAASL,EALX,SAOGE,GALII,IAAQC,mBCGRC,EAXM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,8BACE,4BAAIA,OC0DKC,G,kNAxDbC,MAAQ,CACNtB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPqB,mBAAqB,WAAO,IAAD,EACM,EAAKD,MAEpC,OAHyB,EACjBtB,KADiB,EACXC,QADW,EACFC,K,EAKzBsB,gCAAkC,WAChC,IAAMC,EAAS,EAAKF,qBAEdG,EAAqB,IADV,EAAKJ,MAAdtB,KAC0ByB,EAClC,OAAOE,KAAKC,MAAMF,I,EAEpBf,gBAAkB,SAAAkB,GAChB,IAAMd,EAAOc,EAAMC,OAAOf,KAC1B,EAAKgB,UAAS,SAAAC,GAAS,sBACpBjB,EAAOiB,EAAUjB,GAAQ,O,uDAGpB,IAAD,EACwBkB,KAAKX,MAA5BtB,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBC,EAAQ8B,KAAKV,qBACbnB,EAAqB6B,KAAKT,kCAE1BU,EAAYC,OAAOC,KAAKH,KAAKX,OACnC,OACE,sBAAKd,UAAU,UAAf,UACE,cAAC,EAAD,CAASF,MAAM,wBAAf,SACE,cAAC,EAAD,CACEI,QAASwB,EACTvB,gBAAiBsB,KAAKtB,oBAIf,IAAVR,EACC,cAAC,EAAD,CAAckC,QAAQ,sBAEtB,cAAC,EAAD,CAAS/B,MAAM,aAAf,SACE,cAAC,EAAD,CACEN,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,a,GAjDhBkC,cCFlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c18241c2.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <div>\r\n      <p>Good:{good}</p>\r\n      <p>Neutral:{neutral}</p>\r\n      <p>Bad:{bad}</p>\r\n      <p>Total:{total}</p>\r\n      <p>Positive feedbac:{positivePercentage}%</p>\r\n    </div>\r\n  );\r\n\r\n  Statistics.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    positivePercentage: PropTypes.number.isRequired,\r\n  };\r\n};\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Sections.css';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"Reviews-title\">{title}</h1>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport shortid from 'shortid';\r\nimport PropTypes from 'prop-types';\r\nimport './FeedbackOptions.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <div>\r\n      {options.map(option => (\r\n        <button\r\n          className=\"Review-button\"\r\n          key={shortid.generate()}\r\n          type=\"button\"\r\n          name={option}\r\n          onClick={onLeaveFeedback}\r\n        >\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ massage }) => {\r\n  return (\r\n    <div>\r\n      <p>{massage}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nNotification.propTypes = {\r\n  massage: PropTypes.string.isRequired,\r\n};\r\nexport default Notification;\r\n","import React, { Component } from 'react';\r\nimport Statistics from './Components/Statistics/Statistics';\r\nimport Section from './Components/Section/Section';\r\nimport FeedbackOptions from './Components/FeedbackOptions/FeedbackOptions';\r\nimport Notification from './Components/Notification/Notification';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    const { good, neutral, bad } = this.state;\r\n    const result = good + neutral + bad;\r\n    return result;\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    const result = this.countTotalFeedback();\r\n    const { good } = this.state;\r\n    const percentage = (good * 100) / result;\r\n    return Math.round(percentage);\r\n  };\r\n  onLeaveFeedback = event => {\r\n    const name = event.target.name;\r\n    this.setState(prevState => ({\r\n      [name]: prevState[name] + 1,\r\n    }));\r\n  };\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    const total = this.countTotalFeedback();\r\n    const positivePercentage = this.countPositiveFeedbackPercentage();\r\n\r\n    const objectKey = Object.keys(this.state);\r\n    return (\r\n      <div className=\"Reviews\">\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions\r\n            options={objectKey}\r\n            onLeaveFeedback={this.onLeaveFeedback}\r\n          />\r\n        </Section>\r\n\r\n        {total === 0 ? (\r\n          <Notification message=\"No feedback given\" />\r\n        ) : (\r\n          <Section title=\"Statistics\">\r\n            <Statistics\r\n              good={good}\r\n              neutral={neutral}\r\n              bad={bad}\r\n              total={total}\r\n              positivePercentage={positivePercentage}\r\n            />\r\n          </Section>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}